// Mocks generated by Mockito 5.4.4 from annotations
// in free_rfr/test/free_rfr_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:io' as _i3;

import 'package:flutter/material.dart' as _i7;
import 'package:free_rfr/configurations/context.dart' as _i2;
import 'package:free_rfr/objects/osc_control.dart' as _i4;
import 'package:free_rfr/objects/parameters.dart' as _i6;
import 'package:free_rfr/pages/facepanels/faders.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:osc/osc.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFreeRFRContext_0 extends _i1.SmartFake
    implements _i2.FreeRFRContext {
  _FakeFreeRFRContext_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocket_1 extends _i1.SmartFake implements _i3.Socket {
  _FakeSocket_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OSC].
///
/// See the documentation for Mockito's code generation for more information.
class MockOSC extends _i1.Mock implements _i4.OSC {
  @override
  List<double> get hueSaturation => (super.noSuchMethod(
        Invocation.getter(#hueSaturation),
        returnValue: <double>[],
        returnValueForMissingStub: <double>[],
      ) as List<double>);

  @override
  set hueSaturation(List<double>? _hueSaturation) => super.noSuchMethod(
        Invocation.setter(
          #hueSaturation,
          _hueSaturation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.FreeRFRContext get ctx => (super.noSuchMethod(
        Invocation.getter(#ctx),
        returnValue: _FakeFreeRFRContext_0(
          this,
          Invocation.getter(#ctx),
        ),
        returnValueForMissingStub: _FakeFreeRFRContext_0(
          this,
          Invocation.getter(#ctx),
        ),
      ) as _i2.FreeRFRContext);

  @override
  int get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set faderControlsState(_i5.FaderControlsState? _faderControlsState) =>
      super.noSuchMethod(
        Invocation.setter(
          #faderControlsState,
          _faderControlsState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i6.ControlWidget<_i7.StatefulWidget>> get controlStates =>
      (super.noSuchMethod(
        Invocation.getter(#controlStates),
        returnValue: <_i6.ControlWidget<_i7.StatefulWidget>>[],
        returnValueForMissingStub: <_i6.ControlWidget<_i7.StatefulWidget>>[],
      ) as List<_i6.ControlWidget<_i7.StatefulWidget>>);

  @override
  set controlStates(
          List<_i6.ControlWidget<_i7.StatefulWidget>>? _controlStates) =>
      super.noSuchMethod(
        Invocation.setter(
          #controlStates,
          _controlStates,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Socket get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeSocket_1(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeSocket_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Socket);

  @override
  _i8.Future<void> sendOSCMessage(_i9.OSCMessage? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOSCMessage,
          [message],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void registerControlState(
          _i6.ControlWidget<_i7.StatefulWidget>? controlWidget) =>
      super.noSuchMethod(
        Invocation.method(
          #registerControlState,
          [controlWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.ControlWidget<_i7.StatefulWidget>? getControlWidgetForType(
          _i6.ParameterType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getControlWidgetForType,
          [type],
        ),
        returnValueForMissingStub: null,
      ) as _i6.ControlWidget<_i7.StatefulWidget>?);

  @override
  _i8.Future<void> shutdownMultiConsole() => (super.noSuchMethod(
        Invocation.method(
          #shutdownMultiConsole,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void sleep100() => super.noSuchMethod(
        Invocation.method(
          #sleep100,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendBlind() => super.noSuchMethod(
        Invocation.method(
          #sendBlind,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendLive() => super.noSuchMethod(
        Invocation.method(
          #sendLive,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> sendKey(
    String? key, {
    int? sleepMillis = 100,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendKey,
          [key],
          {#sleepMillis: sleepMillis},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void setupFaderBank(
    int? count,
    _i5.FaderControlsState? state,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setupFaderBank,
          [
            count,
            state,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendCmd(String? cmd) => super.noSuchMethod(
        Invocation.method(
          #sendCmd,
          [cmd],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void send(
    String? cmd,
    List<Object>? list,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #send,
          [
            cmd,
            list,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setParameter(
    String? attributeName,
    double? parameterValue,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setParameter,
          [
            attributeName,
            parameterValue,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLabel(
    double? cueNumber,
    String? label,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setLabel,
          [
            cueNumber,
            label,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void sleep250() => super.noSuchMethod(
        Invocation.method(
          #sleep250,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePanTilt(
    double? pan,
    double? tilt,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePanTilt,
          [
            pan,
            tilt,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendColor(
    double? red,
    double? green,
    double? blue,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendColor,
          [
            red,
            green,
            blue,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
